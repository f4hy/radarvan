/* tslint:disable */
/* eslint-disable */
/**
 * radarvan
 * Stats for generals
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WinLoss } from './WinLoss';
import {
    WinLossFromJSON,
    WinLossFromJSONTyped,
    WinLossToJSON,
    WinLossToJSONTyped,
} from './WinLoss';
import type { General } from './General';
import {
    GeneralFromJSON,
    GeneralFromJSONTyped,
    GeneralToJSON,
    GeneralToJSONTyped,
} from './General';

/**
 * 
 * @export
 * @interface GeneralWL
 */
export interface GeneralWL {
    /**
     * 
     * @type {General}
     * @memberof GeneralWL
     */
    general: General;
    /**
     * 
     * @type {WinLoss}
     * @memberof GeneralWL
     */
    winLoss: WinLoss;
}



/**
 * Check if a given object implements the GeneralWL interface.
 */
export function instanceOfGeneralWL(value: object): value is GeneralWL {
    if (!('general' in value) || value['general'] === undefined) return false;
    if (!('winLoss' in value) || value['winLoss'] === undefined) return false;
    return true;
}

export function GeneralWLFromJSON(json: any): GeneralWL {
    return GeneralWLFromJSONTyped(json, false);
}

export function GeneralWLFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralWL {
    if (json == null) {
        return json;
    }
    return {
        
        'general': GeneralFromJSON(json['general']),
        'winLoss': WinLossFromJSON(json['winLoss']),
    };
}

export function GeneralWLToJSON(json: any): GeneralWL {
    return GeneralWLToJSONTyped(json, false);
}

export function GeneralWLToJSONTyped(value?: GeneralWL | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'general': GeneralToJSON(value['general']),
        'winLoss': WinLossToJSON(value['winLoss']),
    };
}

