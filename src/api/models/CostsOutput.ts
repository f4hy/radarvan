/* tslint:disable */
/* eslint-disable */
/**
 * radarvan
 * Stats for generals
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Player } from './Player';
import {
    PlayerFromJSON,
    PlayerFromJSONTyped,
    PlayerToJSON,
    PlayerToJSONTyped,
} from './Player';
import type { CostsBuiltObject } from './CostsBuiltObject';
import {
    CostsBuiltObjectFromJSON,
    CostsBuiltObjectFromJSONTyped,
    CostsBuiltObjectToJSON,
    CostsBuiltObjectToJSONTyped,
} from './CostsBuiltObject';

/**
 * 
 * @export
 * @interface CostsOutput
 */
export interface CostsOutput {
    /**
     * 
     * @type {Player}
     * @memberof CostsOutput
     */
    player: Player | null;
    /**
     * 
     * @type {Array<CostsBuiltObject>}
     * @memberof CostsOutput
     */
    buildings: Array<CostsBuiltObject>;
    /**
     * 
     * @type {Array<CostsBuiltObject>}
     * @memberof CostsOutput
     */
    units: Array<CostsBuiltObject>;
    /**
     * 
     * @type {Array<CostsBuiltObject>}
     * @memberof CostsOutput
     */
    upgrades: Array<CostsBuiltObject>;
}

/**
 * Check if a given object implements the CostsOutput interface.
 */
export function instanceOfCostsOutput(value: object): value is CostsOutput {
    if (!('player' in value) || value['player'] === undefined) return false;
    if (!('buildings' in value) || value['buildings'] === undefined) return false;
    if (!('units' in value) || value['units'] === undefined) return false;
    if (!('upgrades' in value) || value['upgrades'] === undefined) return false;
    return true;
}

export function CostsOutputFromJSON(json: any): CostsOutput {
    return CostsOutputFromJSONTyped(json, false);
}

export function CostsOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CostsOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'player': PlayerFromJSON(json['player']),
        'buildings': ((json['buildings'] as Array<any>).map(CostsBuiltObjectFromJSON)),
        'units': ((json['units'] as Array<any>).map(CostsBuiltObjectFromJSON)),
        'upgrades': ((json['upgrades'] as Array<any>).map(CostsBuiltObjectFromJSON)),
    };
}

export function CostsOutputToJSON(json: any): CostsOutput {
    return CostsOutputToJSONTyped(json, false);
}

export function CostsOutputToJSONTyped(value?: CostsOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'player': PlayerToJSON(value['player']),
        'buildings': ((value['buildings'] as Array<any>).map(CostsBuiltObjectToJSON)),
        'units': ((value['units'] as Array<any>).map(CostsBuiltObjectToJSON)),
        'upgrades': ((value['upgrades'] as Array<any>).map(CostsBuiltObjectToJSON)),
    };
}

