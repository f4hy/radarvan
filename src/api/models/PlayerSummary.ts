/* tslint:disable */
/* eslint-disable */
/**
 * radarvan
 * Stats for generals
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ObjectSummary } from './ObjectSummary';
import {
    ObjectSummaryFromJSON,
    ObjectSummaryFromJSONTyped,
    ObjectSummaryToJSON,
    ObjectSummaryToJSONTyped,
} from './ObjectSummary';

/**
 * 
 * @export
 * @interface PlayerSummary
 */
export interface PlayerSummary {
    /**
     * 
     * @type {string}
     * @memberof PlayerSummary
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerSummary
     */
    side: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerSummary
     */
    team: number;
    /**
     * 
     * @type {boolean}
     * @memberof PlayerSummary
     */
    win: boolean;
    /**
     * 
     * @type {string}
     * @memberof PlayerSummary
     */
    color: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerSummary
     */
    moneySpent: number;
    /**
     * 
     * @type {{ [key: string]: ObjectSummary; }}
     * @memberof PlayerSummary
     */
    unitsCreated: { [key: string]: ObjectSummary; };
    /**
     * 
     * @type {{ [key: string]: ObjectSummary; }}
     * @memberof PlayerSummary
     */
    buildingsBuilt: { [key: string]: ObjectSummary; };
    /**
     * 
     * @type {{ [key: string]: ObjectSummary; }}
     * @memberof PlayerSummary
     */
    upgradesBuilt: { [key: string]: ObjectSummary; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof PlayerSummary
     */
    powersUsed: { [key: string]: number; };
}

/**
 * Check if a given object implements the PlayerSummary interface.
 */
export function instanceOfPlayerSummary(value: object): value is PlayerSummary {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('side' in value) || value['side'] === undefined) return false;
    if (!('team' in value) || value['team'] === undefined) return false;
    if (!('win' in value) || value['win'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('moneySpent' in value) || value['moneySpent'] === undefined) return false;
    if (!('unitsCreated' in value) || value['unitsCreated'] === undefined) return false;
    if (!('buildingsBuilt' in value) || value['buildingsBuilt'] === undefined) return false;
    if (!('upgradesBuilt' in value) || value['upgradesBuilt'] === undefined) return false;
    if (!('powersUsed' in value) || value['powersUsed'] === undefined) return false;
    return true;
}

export function PlayerSummaryFromJSON(json: any): PlayerSummary {
    return PlayerSummaryFromJSONTyped(json, false);
}

export function PlayerSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['Name'],
        'side': json['Side'],
        'team': json['Team'],
        'win': json['Win'],
        'color': json['Color'],
        'moneySpent': json['MoneySpent'],
        'unitsCreated': (mapValues(json['UnitsCreated'], ObjectSummaryFromJSON)),
        'buildingsBuilt': (mapValues(json['BuildingsBuilt'], ObjectSummaryFromJSON)),
        'upgradesBuilt': (mapValues(json['UpgradesBuilt'], ObjectSummaryFromJSON)),
        'powersUsed': json['PowersUsed'],
    };
}

export function PlayerSummaryToJSON(json: any): PlayerSummary {
    return PlayerSummaryToJSONTyped(json, false);
}

export function PlayerSummaryToJSONTyped(value?: PlayerSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Name': value['name'],
        'Side': value['side'],
        'Team': value['team'],
        'Win': value['win'],
        'Color': value['color'],
        'MoneySpent': value['moneySpent'],
        'UnitsCreated': (mapValues(value['unitsCreated'], ObjectSummaryToJSON)),
        'BuildingsBuilt': (mapValues(value['buildingsBuilt'], ObjectSummaryToJSON)),
        'UpgradesBuilt': (mapValues(value['upgradesBuilt'], ObjectSummaryToJSON)),
        'PowersUsed': value['powersUsed'],
    };
}

